{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "@typescript-eslint",
    "react-hooks",
    "react",
    "react-native",
    "simple-import-sort",
    "jsx-expressions"
  ],
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "rules": {
    "jsx-expressions/strict-logical-expressions": "error",
    "react-native/no-unused-styles": "error",
    "react-native/split-platform-components": "error",
    "react-native/no-inline-styles": "error",
    "react-native/no-color-literals": "error",
    "react-native/no-raw-text": [
      "error",
      {
        "skip": ["Typography", "Typography.Typography", "Button"]
      }
    ],
    "react-native/no-single-element-style-arrays": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "react/display-name": "error",
    "react/jsx-curly-brace-presence": "error",
    "react/jsx-key": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-pascal-case": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-boolean-value": "error",
    "react/no-array-index-key": "error",
    "react/no-deprecated": "error",
    "react/no-unsafe": "error",
    "react/jsx-filename-extension": [
      "error",
      {
        "extensions": [".tsx"]
      }
    ],
    "react/function-component-definition": "error",
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "ignoreCase": true,
        "noSortAlphabetically": true,
        "reservedFirst": ["key"]
      }
    ],
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": "error",
    "@typescript-eslint/consistent-indexed-object-style": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": ["off", "type"],
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implicit-any-catch": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "react-native",
            "importNames": ["SafeAreaView"],
            "message": "Please import 'SafeAreaView' from 'react-native-safe-area-context' instead."
          }
        ]
      }
    ],
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-constraint": "error",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/brace-style": "error",
    "@typescript-eslint/default-param-last": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-duplicate-imports": "error",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-loss-of-precision": "error",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/return-await": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": ["typeLike"],
        "format": ["StrictPascalCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean"],
        "format": ["StrictPascalCase"],
        "prefix": ["is", "are", "should", "has", "have", "can", "did", "will", "was"]
      },
      {
        "selector": "parameter",
        "format": ["camelCase", "PascalCase"],
        "modifiers": ["unused"],
        "trailingUnderscore": "require"
      }
    ],
    "no-async-promise-executor": "error",
    "no-console": "error",
    "no-debugger": "error",
    "no-cond-assign": "error",
    "no-invalid-regexp": "error",
    "no-unreachable": "error",
    "use-isnan": "error",
    "curly": "error",
    "eqeqeq": "error",
    "no-var": "error",
    "prefer-const": "error",
    "prefer-arrow-callback": "error",
    "prefer-promise-reject-errors": "error",
    "constructor-super": "error",
    "prefer-destructuring": "error",
    "no-delete-var": "error",
    "no-shadow-restricted-names": "error",

    "simple-import-sort/imports": "error"
  },
  "env": {
    "react-native/react-native": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
